// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CampaignCreated extends ethereum.Event {
  get params(): CampaignCreated__Params {
    return new CampaignCreated__Params(this);
  }
}

export class CampaignCreated__Params {
  _event: CampaignCreated;

  constructor(event: CampaignCreated) {
    this._event = event;
  }

  get campaignId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DonationReceived extends ethereum.Event {
  get params(): DonationReceived__Params {
    return new DonationReceived__Params(this);
  }
}

export class DonationReceived__Params {
  _event: DonationReceived;

  constructor(event: DonationReceived) {
    this._event = event;
  }

  get campaignId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get donor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FundsWithdrawn extends ethereum.Event {
  get params(): FundsWithdrawn__Params {
    return new FundsWithdrawn__Params(this);
  }
}

export class FundsWithdrawn__Params {
  _event: FundsWithdrawn;

  constructor(event: FundsWithdrawn) {
    this._event = event;
  }

  get campaignId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RefundIssued extends ethereum.Event {
  get params(): RefundIssued__Params {
    return new RefundIssued__Params(this);
  }
}

export class RefundIssued__Params {
  _event: RefundIssued;

  constructor(event: RefundIssued) {
    this._event = event;
  }

  get campaignId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CrowdFunding__campaignsResult {
  value0: string;
  value1: string;
  value2: BigInt;
  value3: string;
  value4: string;
  value5: BigInt;
  value6: string;
  value7: Address;
  value8: BigInt;
  value9: i32;
  value10: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: BigInt,
    value3: string,
    value4: string,
    value5: BigInt,
    value6: string,
    value7: Address,
    value8: BigInt,
    value9: i32,
    value10: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromString(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set(
      "value9",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value9))
    );
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    return map;
  }

  getTitle(): string {
    return this.value0;
  }

  getCategory(): string {
    return this.value1;
  }

  getFundingGoal(): BigInt {
    return this.value2;
  }

  getImage(): string {
    return this.value3;
  }

  getCryptoChoice(): string {
    return this.value4;
  }

  getDuration(): BigInt {
    return this.value5;
  }

  getDescription(): string {
    return this.value6;
  }

  getCreator(): Address {
    return this.value7;
  }

  getAmountCollected(): BigInt {
    return this.value8;
  }

  getState(): i32 {
    return this.value9;
  }

  getEndTime(): BigInt {
    return this.value10;
  }
}

export class CrowdFunding__getCampaignResult {
  value0: string;
  value1: string;
  value2: BigInt;
  value3: string;
  value4: string;
  value5: BigInt;
  value6: string;
  value7: Address;
  value8: BigInt;
  value9: i32;
  value10: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: BigInt,
    value3: string,
    value4: string,
    value5: BigInt,
    value6: string,
    value7: Address,
    value8: BigInt,
    value9: i32,
    value10: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromString(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set(
      "value9",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value9))
    );
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    return map;
  }

  getTitle(): string {
    return this.value0;
  }

  getCategory(): string {
    return this.value1;
  }

  getFundingGoal(): BigInt {
    return this.value2;
  }

  getImage(): string {
    return this.value3;
  }

  getCryptoChoice(): string {
    return this.value4;
  }

  getDuration(): BigInt {
    return this.value5;
  }

  getDescription(): string {
    return this.value6;
  }

  getCreator(): Address {
    return this.value7;
  }

  getAmountCollected(): BigInt {
    return this.value8;
  }

  getState(): i32 {
    return this.value9;
  }

  getEndTime(): BigInt {
    return this.value10;
  }
}

export class CrowdFunding extends ethereum.SmartContract {
  static bind(address: Address): CrowdFunding {
    return new CrowdFunding("CrowdFunding", address);
  }

  campaignCount(): BigInt {
    let result = super.call("campaignCount", "campaignCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_campaignCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "campaignCount",
      "campaignCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  campaigns(param0: BigInt): CrowdFunding__campaignsResult {
    let result = super.call(
      "campaigns",
      "campaigns(uint256):(string,string,uint256,string,string,uint256,string,address,uint256,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new CrowdFunding__campaignsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toString(),
      result[4].toString(),
      result[5].toBigInt(),
      result[6].toString(),
      result[7].toAddress(),
      result[8].toBigInt(),
      result[9].toI32(),
      result[10].toBigInt()
    );
  }

  try_campaigns(
    param0: BigInt
  ): ethereum.CallResult<CrowdFunding__campaignsResult> {
    let result = super.tryCall(
      "campaigns",
      "campaigns(uint256):(string,string,uint256,string,string,uint256,string,address,uint256,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CrowdFunding__campaignsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toString(),
        value[4].toString(),
        value[5].toBigInt(),
        value[6].toString(),
        value[7].toAddress(),
        value[8].toBigInt(),
        value[9].toI32(),
        value[10].toBigInt()
      )
    );
  }

  donations(param0: BigInt, param1: Address): BigInt {
    let result = super.call(
      "donations",
      "donations(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_donations(param0: BigInt, param1: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "donations",
      "donations(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCampaign(_campaignId: BigInt): CrowdFunding__getCampaignResult {
    let result = super.call(
      "getCampaign",
      "getCampaign(uint256):(string,string,uint256,string,string,uint256,string,address,uint256,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_campaignId)]
    );

    return new CrowdFunding__getCampaignResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toString(),
      result[4].toString(),
      result[5].toBigInt(),
      result[6].toString(),
      result[7].toAddress(),
      result[8].toBigInt(),
      result[9].toI32(),
      result[10].toBigInt()
    );
  }

  try_getCampaign(
    _campaignId: BigInt
  ): ethereum.CallResult<CrowdFunding__getCampaignResult> {
    let result = super.tryCall(
      "getCampaign",
      "getCampaign(uint256):(string,string,uint256,string,string,uint256,string,address,uint256,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_campaignId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CrowdFunding__getCampaignResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toString(),
        value[4].toString(),
        value[5].toBigInt(),
        value[6].toString(),
        value[7].toAddress(),
        value[8].toBigInt(),
        value[9].toI32(),
        value[10].toBigInt()
      )
    );
  }
}

export class CheckCampaignStateCall extends ethereum.Call {
  get inputs(): CheckCampaignStateCall__Inputs {
    return new CheckCampaignStateCall__Inputs(this);
  }

  get outputs(): CheckCampaignStateCall__Outputs {
    return new CheckCampaignStateCall__Outputs(this);
  }
}

export class CheckCampaignStateCall__Inputs {
  _call: CheckCampaignStateCall;

  constructor(call: CheckCampaignStateCall) {
    this._call = call;
  }

  get _campaignId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CheckCampaignStateCall__Outputs {
  _call: CheckCampaignStateCall;

  constructor(call: CheckCampaignStateCall) {
    this._call = call;
  }
}

export class CreateCampaignCall extends ethereum.Call {
  get inputs(): CreateCampaignCall__Inputs {
    return new CreateCampaignCall__Inputs(this);
  }

  get outputs(): CreateCampaignCall__Outputs {
    return new CreateCampaignCall__Outputs(this);
  }
}

export class CreateCampaignCall__Inputs {
  _call: CreateCampaignCall;

  constructor(call: CreateCampaignCall) {
    this._call = call;
  }

  get _title(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _category(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _fundingGoal(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _image(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _cryptoChoice(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _duration(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _description(): string {
    return this._call.inputValues[6].value.toString();
  }
}

export class CreateCampaignCall__Outputs {
  _call: CreateCampaignCall;

  constructor(call: CreateCampaignCall) {
    this._call = call;
  }
}

export class DonateEtherCall extends ethereum.Call {
  get inputs(): DonateEtherCall__Inputs {
    return new DonateEtherCall__Inputs(this);
  }

  get outputs(): DonateEtherCall__Outputs {
    return new DonateEtherCall__Outputs(this);
  }
}

export class DonateEtherCall__Inputs {
  _call: DonateEtherCall;

  constructor(call: DonateEtherCall) {
    this._call = call;
  }

  get _campaignId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DonateEtherCall__Outputs {
  _call: DonateEtherCall;

  constructor(call: DonateEtherCall) {
    this._call = call;
  }
}

export class DonateTokenCall extends ethereum.Call {
  get inputs(): DonateTokenCall__Inputs {
    return new DonateTokenCall__Inputs(this);
  }

  get outputs(): DonateTokenCall__Outputs {
    return new DonateTokenCall__Outputs(this);
  }
}

export class DonateTokenCall__Inputs {
  _call: DonateTokenCall;

  constructor(call: DonateTokenCall) {
    this._call = call;
  }

  get _campaignId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DonateTokenCall__Outputs {
  _call: DonateTokenCall;

  constructor(call: DonateTokenCall) {
    this._call = call;
  }
}

export class RefundCall extends ethereum.Call {
  get inputs(): RefundCall__Inputs {
    return new RefundCall__Inputs(this);
  }

  get outputs(): RefundCall__Outputs {
    return new RefundCall__Outputs(this);
  }
}

export class RefundCall__Inputs {
  _call: RefundCall;

  constructor(call: RefundCall) {
    this._call = call;
  }

  get _campaignId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RefundCall__Outputs {
  _call: RefundCall;

  constructor(call: RefundCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get _campaignId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}
